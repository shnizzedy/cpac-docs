# This is a C-PAC nodeblock descriptor file. (to be pulled from C-PAC/CPAC/nodeblock)

steps:

  tissue_seg_fsl_fast:
    description: null
    references: null
    methods:
      tissue_seg_fsl_fast():
        description: null
        references: null
        config: null
        operations: |
          graph TD
            A[Input T1w Image] --> B[Segment with FSL FAST];
            B --> C1[Tissue Class Files];
            B --> C2[Probability Maps];
            B --> D1[Partial Volume Map to PVE CSF];
            B --> D2[Partial Volume Map to PVE GM];
            B --> D3[Partial Volume Map to PVE WM];

            C1 --> E1[Pick WM Class 0 -> CSF];
            C2 --> E2[Pick WM Prob 0 -> CSF];
            E1 --> F1[Process CSF];
            E2 --> F1;

            C1 --> E3[Pick WM Class 1 -> GM];
            C2 --> E4[Pick WM Prob 1 -> GM];
            E3 --> F2[Process GM];
            E4 --> F2;

            C1 --> E5[Pick WM Class 2 -> WM];
            C2 --> E6[Pick WM Prob 2 -> WM];
            E5 --> F3[Process WM];
            E6 --> F3;

            F1 --> G1[Output: CSF Segment Mask];
            F2 --> G2[Output: GM Segment Mask];
            F3 --> G3[Output: WM Segment Mask];

            D1 --> H1[Output: CSF PVEseg];
            D2 --> H2[Output: GM PVEseg];
            D3 --> H3[Output: WM PVEseg];

            B --> I1[Output: CSF ProbSeg via get_csf];
            C2 --> I2[Output: GM ProbSeg];
            C2 --> I3[Output: WM ProbSeg];

            B --> J1[Output: CSF Mask];
            B --> J2[Output: GM Mask];
            B --> J3[Output: WM Mask];
        source: null
        validation: null

  tissue_seg_T1_template_based:
    description: null
    references: null
    methods:
      tissue_seg_T1_template_based():
        description: null
        references: null
        config: null
        operations: |
          graph TD
            A[Get Registration Provenance] --> B[Check Registration Tool];
            B --> C{Use ANTs?};
            C --> D1[CSF Template to T1];
            C --> D2[GM Template to T1];
            C --> D3[WM Template to T1];

            D1 --> E1[Set CSF Template Path];
            D2 --> E2[Set GM Template Path];
            D3 --> E3[Set WM Template Path];

            F[Get desc-brain_T1w] --> D1;
            F --> D2;
            F --> D3;

            G[Get Template-to-T1w XFM] --> D1;
            G --> D2;
            G --> D3;

            D1 --> H1[Output: CSF Mask];
            D2 --> H2[Output: GM Mask];
            D3 --> H3[Output: WM Mask];
        source: null
        validation: null

  tissue_seg_EPI_template_based:
    description: null
    references: null
    methods:
      tissue_seg_EPI_template_based():
        description: null
        references: null
        config: null
        operations: |
          graph TD
            A[Get Registration Provenance - EPI] --> B[Check Registration Tool];
            B --> C{Use ANTs?};
            C --> D1[CSF Template to BOLD];
            C --> D2[GM Template to BOLD];
            C --> D3[WM Template to BOLD];

            D1 --> E1[Set CSF Template Path];
            D2 --> E2[Set GM Template Path];
            D3 --> E3[Set WM Template Path];

            F[Get desc-mean_bold] --> D1;
            F --> D2;
            F --> D3;

            G[Get EPItemplate-to-BOLD XFM] --> D1;
            G --> D2;
            G --> D3;

            D1 --> H1[Output: space-bold_label-CSF_mask];
            D2 --> H2[Output: space-bold_label-GM_mask];
            D3 --> H3[Output: space-bold_label-WM_mask];
        source: null
        validation: null

  tissue_seg_ants_prior:
    description: null
    references: null
    methods:
      tissue_seg_ants_prior():
        description: null
        references: null
        config: null
        operations: |
          graph TD;
            A[Create ANTs Prior-Based Segmentation Node] --> B[Set Template Brain List];
            A --> C[Set Template Segmentation List];
            A --> D[Set CSF Label];
            A --> E[Set GM Label];
            A --> F[Set WM Label];

            G[Get desc-brain_T1w] --> H[Connect to Anatomical Brain];
            H --> A;

            I[Get T1w Brain Masks] --> J[Connect to Anatomical Brain Mask];
            J --> A;

            A --> K[Output: CSF Mask];
            A --> L[Output: GM Mask];
            A --> M[Output: WM Mask];
        source: null
        validation: null

  tissue_seg_freesurfer:
    description: null
    references: null
    methods:
      tissue_seg_freesurfer():
        description: null
        references: null
        config: null
        operations: |
          graph TD
            A[Get freesurfer-subject-dir] --> B[fs_aseg_to_native];
            C[Get pipeline-fs_subcortical-seg] --> B;
            D[Get pipeline-fs_raw-average] --> B;

            B --> E[fs_aseg_to_nifti];
            E --> F[pick_tissue];

            G[Set CSF/GM/WM Labels from Config] --> F;

            F --> H{Erode Enabled?};

            H -->|Yes| I[Erode CSF];
            H -->|Yes| J[Erode GM];
            H -->|Yes| K[Erode WM];

            I --> L[Output: CSF Mask];
            J --> M[Output: GM Mask];
            K --> N[Output: WM Mask];

            H -->|No| O[Output: CSF Mask];
            H -->|No| P[Output: GM Mask];
            H -->|No| Q[Output: WM Mask];
        source: null
        validation: null
